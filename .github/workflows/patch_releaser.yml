name: Push Latest Tags on Branch Push (Steps Folder Only)

on:
  push:
    branches-ignore:
      - 'main'
    paths:            
      - 'flows/steps/**'

jobs:
  push-latest-tags:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch enough history to compare the last two commits

      - name: Find modified folders
        id: modified-folders
        run: |
          # Fetch the modified folders between the previous and current commits
          MODIFIED_FOLDERS=$(git diff --name-only --diff-filter=AM HEAD~1 HEAD flows/steps/ | cut -d'/' -f3 | sort | uniq | grep -v '^$' || true)

          echo "DEBUG: Raw MODIFIED_FOLDERS content:"
          echo "$MODIFIED_FOLDERS"

          # If no modified folders are found, set an empty list and exit
          if [ -z "$MODIFIED_FOLDERS" ]; then
            echo "folders=[]" >> $GITHUB_OUTPUT
            echo "No modified folders found"
            exit 0
          fi

          # Convert the list of folders (with newlines) into a JSON array
          FOLDERS_JSON=$(echo "$MODIFIED_FOLDERS" | jq -R . | jq -s . | jq -c .)

          # Output the folders as JSON to GitHub Actions output
          echo "folders=${FOLDERS_JSON}" >> $GITHUB_OUTPUT
          echo "DEBUG: Modified folders: ${FOLDERS_JSON}"

      - name: Set up Python
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install semver

      - name: get-latest-tags
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        id: get-latest-tag
        run: |
          python .github/scripts/get_tags_for_new_change.py
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          MODIFIED_FOLDERS: ${{ steps.modified-folders.outputs.folders }}
          
      - name: Push Latest Tags
        id: push-tags
        run: |
          python .github/scripts/push_latest_tags.py 
        env:
          LATEST_COMMENT: "NA"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          CURRENT_TAG_MAP: "${{ env.TAG_MAP }}"