name: Detect Modified Steps

on:
  pull_request:
    branches: [ main ]


jobs:
  check-modified-folders:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Get the list of modified or new folders within 'flows/steps'
      - name: Find modified folders
        id: modified_folders
        run: |
          # Handle the case where this is the first commit
          if [ "$(git rev-parse --is-shallow-repository)" = "true" ]; then
            git fetch --prune --unshallow
          fi

          # Check if there is a previous commit; if not, compare to an empty tree
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            BASE=HEAD^
          else
            BASE=$(git hash-object -t tree /dev/null)
          fi

          # Get the list of changed files in the 'flows/steps' folder and their parent directories
          MODIFIED_FOLDERS=$(git diff --name-only $BASE HEAD flows/steps/ | cut -d'/' -f2 | sort | uniq)


          # Print the folders for debug purposes
          echo "Modified folders: $MODIFIED_FOLDERS"

          # Save the modified folders as output for use in other steps
          echo "::set-output name=folders::$MODIFIED_FOLDERS"

      # Step 3: Use the modified folders (optional step for future tasks)
      - name: List modified folders
        run: |
          echo "Modified folders: ${{ steps.modified_folders.outputs.folders }}"
