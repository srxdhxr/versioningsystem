name: Detect-modified-steps
on:
  pull_request:
    branches: [ main ]
    paths:
      - 'flows/steps/**'  


jobs:
  check-modified-folders:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:

      - name: Find modified or newly added steps
        id: modified-steps
        run: |
          MODIFIED_FOLDERS=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} flows/steps/ | cut -d'/' -f3 | sort | uniq | grep -v '^$' || true)
          
          if [ -z "$MODIFIED_FOLDERS" ]; then
            echo "folders=[]" >> $GITHUB_OUTPUT
            echo "No modified folders found"
            exit 0
          fi
          
          FOLDERS_JSON=$(printf '%s\n' $MODIFIED_FOLDERS | jq -R -s 'split("\n") | map(select(length > 0))')
          echo "folders=${FOLDERS_JSON}" >> $GITHUB_OUTPUT
          echo "DEBUG: Modified folders: ${FOLDERS_JSON}"

      - name: Set up Python
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Process Docker tags
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        id: docker-tags
        run: |
          # Run Python script and capture output
          TAGS_OUTPUT=$(python .github/scripts/docker_tags.py \
            '${{ steps.modified-folders.outputs.folders }}' \
            '${{ secrets.DOCKER_USERNAME }}' \
            '${{ secrets.DOCKER_PWD }}')
          
          # Save output to GITHUB_OUTPUT
          echo "tags=$TAGS_OUTPUT" >> $GITHUB_OUTPUT
          echo "DEBUG: Tags output: $TAGS_OUTPUT"

      - name: Create PR Comment
        if: fromJSON(steps.modified-folders.outputs.folders) != '[]'
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const folders = ${{ steps.modified-folders.outputs.folders }};

              const tags = ${{ steps.docker-tags.outputs.tags || '[]' }};
              
              let comment = '## Modified Steps Check\n\n';
              
              // Add folders section
              comment += '### Modified Folders:\n';
              if (folders && folders.length > 0) {
                folders.forEach(folder => {
                  comment += `- \`${folder}\`\n`;
                });
              } else {
                comment += '_No modified folders found_\n';
              }
              

              // Add tags section
              comment += '\n### Steps and Tags:\n';
              if (tags && tags.length > 0) {
                tags.forEach(([step, tag]) => {
                  comment += `- \`${step}\`: \`${tag}\`\n`;
                });
              } else {
                comment += '_No matching tags found_\n';
              }
              
              comment += '\n⚠️ Please review these changes carefully before merging.';
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            } catch (error) {
              core.setFailed(`Action failed with error: ${error}`);
              console.log('Error details:', error);
            }
